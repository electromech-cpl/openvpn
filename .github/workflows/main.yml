name: Build & Deploy Docker

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    # Make environment variables available in all steps
    env:
      DOCKERHUB_REPO: ${{ env.DOCKERHUB_REPO }}
      DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ env.DOCKERHUB_TOKEN }}
      IMAGE_TAG: ${{ env.IMAGE_TAG }}

    steps:
      # 1) Check out your repository code
      - name: Check out code
        uses: actions/checkout@v3

      # 2) Optional: Make sure your build script is executable
      - name: Make build script executable
        run: chmod +x build/build.sh

      # 3) Run your build script
      #    Ensure it calls 'docker build' with something like:
      #    docker build -t "$DOCKERHUB_REPO:$IMAGE_TAG" .
      - name: Run build script
        run: |
          cd build
          ./build.sh

      # 4) Login to Docker Hub using the environment variables
      - name: Docker Hub Login
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      # 5) Push the Docker image
      #    Make sure the tag here matches the tag in your build script.
      - name: Push Docker Image
        run: |
          docker push "$DOCKERHUB_REPO:$IMAGE_TAG"

      # 6) Create a GitHub release referencing the Docker image tag
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.IMAGE_TAG }}
          release_name: "Release ${{ env.IMAGE_TAG }}"
          body: "Docker image: ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
