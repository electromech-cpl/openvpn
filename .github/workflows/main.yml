name: Build & Deploy Docker

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    # Use your "docker" environment where env vars and secrets are defined
    environment: docker
    runs-on: ubuntu-latest

    steps:
      # 1) Check out code
      - name: Check out code
        uses: actions/checkout@v3

      # 2) Log in to Docker Hub using the DOCKERHUB_TOKEN secret
      - name: Docker Hub Login
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      # 3) Build your images using build.sh
      #    * The script generates two local images: "local/beego-v8" and "local/openvpn-ui"
      - name: Build Docker Images
        run: |
          cd build
          chmod +x build.sh
          ./build.sh

      # 4) Re-tag the final local image (local/openvpn-ui) to your Docker Hub repo
      - name: Tag final image
        run: |
          docker tag local/openvpn-ui "${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}"

      # 5) Push the final image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push "${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}"

      # 6) Create a GitHub Release referencing the Docker image tag
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.IMAGE_TAG }}
          release_name: "Release ${{ env.IMAGE_TAG }}"
          body: "Docker image: ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}"
          draft: false
          prerelease: false
        env:
          # Provided automatically by GitHub for creating releases
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
